FROM public.ecr.aws/lambda/python:3.9

ARG CODEARTIFACT_AUTH_TOKEN

ENV ODBC_VERSION=2.3.7

COPY lambdas/dw_retention/src/ ${LAMBDA_TASK_ROOT}

COPY lambdas/dw_retention/requirements.txt  .

RUN yum install -y tar gzip make gcc-c++ python3-devel unixODBC-devel e2fsprogs.x86_64 0:1.43.5-2.43.amzn1 fuse-libs.x86_64 0:2.9.4-1.18.amzn1 libss.x86_64 0:1.43.5-2.43.amzn1 openssl && \
    ln -s /usr/libexec/gcc/x86_64-redhat-linux/7/cc1plus /usr/bin/

RUN \
    curl ftp://ftp.unixodbc.org/pub/unixODBC/unixODBC-${ODBC_VERSION}.tar.gz -O && \
    tar xzvf unixODBC-${ODBC_VERSION}.tar.gz && \
    cd unixODBC-${ODBC_VERSION} && \
    ./configure --sysconfdir=/opt --disable-gui --disable-drivers --enable-iconv --with-iconv-char-enc=UTF8 --with-iconv-ucode-enc=UTF16LE --prefix=/opt && \
    make && \
    make install && \
    cp include/*.h /usr/include/ && \
    cd .. && \
    rm -rf unixODBC-${ODBC_VERSION} unixODBC-${ODBC_VERSION}.tar.gz

RUN \
    curl https://packages.microsoft.com/config/rhel/6/prod.repo > /etc/yum.repos.d/mssql-release.repo && \
    ACCEPT_EULA=Y yum install -y msodbcsql17 --disablerepo=amzn* && \
    export CFLAGS="-I/opt/include" && \
    export LDFLAGS="-L/opt/lib"

RUN pip3 config set global.index-url https://aws:${CODEARTIFACT_AUTH_TOKEN}@stellaralgo-176624903806.d.codeartifact.us-east-1.amazonaws.com/pypi/machine-learning/simple/
RUN  pip3 install -r requirements.txt --target "${LAMBDA_TASK_ROOT}"